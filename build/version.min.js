var Version=function(){"use strict";function e(e,t){return t={exports:{}},e(t,t.exports),t.exports}var t=e(function(e){var t=function(){};t.prototype={bind:function(e,t){this._events=this._events||{},this._events[e]=this._events[e]||[],this._events[e].push(t)},unbind:function(e,t){this._events=this._events||{},e in this._events!=!1&&this._events[e].splice(this._events[e].indexOf(t),1)},trigger:function(e){if(this._events=this._events||{},e in this._events!=!1)for(var t=0;t<this._events[e].length;t++)this._events[e][t].apply(this,Array.prototype.slice.call(arguments,1))}},t.mixin=function(e){for(var r=["bind","unbind","trigger"],n=0;n<r.length;n++)e.prototype[r[n]]=t.prototype[r[n]]},"exports"in e&&(e.exports=t)}),r=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)};return e(function(e){function n(e){var t="";return 1===e.length?t=e[0]:2===e.length?t=e.join(" and "):e.length>2&&(t=e.slice(0,-1).join(", ")+", and "+e.slice(-1)),t}var s=window&&window.version_base_url||"https://api.releasepage.co",o=window&&window.help_base_url||"https://help.releasepage.co/api/getting-started",i=function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.opts=t,this.bind("load",function(){return e.render()})};i.prototype={options:function(e){return this.opts=e,this},load:function(){this.opts.github?this.useGitHub=!0:(this.opts.apiKey||console.error("version.js: no key provided"),this.opts.pageId||console.error("version.js: no pageId provided"));var e=this.onLoad.bind(this),t=new XMLHttpRequest;t.addEventListener("load",function(){e({status:this.status,response:this.response})});var r=this.getUrl();t.open("GET",r),t.send()},getUrl:function(){if(this.useGitHub){var e=this.opts.github.repo;return"https://api.github.com/repos/:owner/:repo/releases/latest".replace(":owner/:repo",e)}return s+"/v1/pages/"+this.opts.pageId+"/version?apiKey="+this.opts.apiKey},onLoad:function(e){return this.useGitHub?this.parseGitHubResponse(e):this.parseReleasePageResponse(e)},parseGitHubResponse:function(e){var t=e.status,r=e.response;switch(t){case 401:return console.error("version.js: Bad GitHub credentials");case 403:return console.error("version.js: Access is denied to that GitHub repository");case 404:return console.error("version.js: GitHub repository not found");case 301:return console.error("version.js: GitHub repository has moved permanently");case 302:case 307:return console.error("version.js: GitHub repository has moved");case 200:var n=JSON.parse(r);this.latest=[{repo:this.opts.github.repo,version:n.tag_name,author:n.author.login,published_at:n.published_at}];break;default:return console.error("version.js: GitHub API error",t,r)}return this.trigger("load")},parseReleasePageResponse:function(e){var t=e.status,r=e.response;switch(t){case 404:return console.error("version.js: A Release Page with id "+this.opts.pageId+" does not exist");case 401:console.error("version.js: enable the version api for this Release Page: "+o);break;case 200:var n=JSON.parse(r);this.latest=n.latest,this.latestGrouped=n.latestGrouped,this.permalink=n.permalink;break;default:return console.error("version.js: ReleasePage API error",t,r)}return this.trigger("load")},render:function(){var e=document.querySelectorAll("[data-version-badge]");e.length&&this.renderBadges({elements:e});var t=document.querySelectorAll("[data-repo-name]");t.length&&this.renderRepoNames({elements:t});var r=document.querySelectorAll("[data-version-author]");r.length&&this.renderAuthors({elements:r});var n=document.querySelectorAll("[data-version-published]");return n.length&&this.renderPublishedAt({elements:n}),this},renderAuthors:function(e){var t=this;return e.elements.forEach(function(e){var s=e.parentElement.getAttribute("data-version-for"),o=void 0;o=s?[t.latest.find(function(e){return new RegExp(e.repo,"i").test(s)}).author]:t.latestGrouped?t.latestGrouped.authors:t.latest.reduce(function(e,t){return e.includes(t.author)?e:[].concat(r(e),[t.author])},[]),e.textContent=n(o)})},renderPublishedAt:function(e){var t=this;return e.elements.forEach(function(e){var r=e.parentElement.getAttribute("data-version-for"),n=void 0;n=r?t.latest.find(function(e){return new RegExp(e.repo,"i").test(r)}).published_at:t.isGrouped()?t.latestGrouped.published_at:t.latest[0].published_at,e.textContent=new Date(n).toDateString()})},renderRepoNames:function(e){var t=this;return e.elements.forEach(function(e){var r=e.parentElement.getAttribute("data-version-for"),s=void 0;if(r){var o=t.latest.find(function(e){return new RegExp(e.repo,"i").test(r)});s=[o.name||o.repo]}else s=t.latest.map(function(e){return e.name||e.repo});e.textContent=n(s)})},renderBadges:function(e){var t=this;e.elements.forEach(function(e){var r=e.parentElement.getAttribute("data-version-for"),n=void 0;n=r?t.latest.find(function(e){return new RegExp(e.repo,"i").test(r)}).version:t.isGrouped()?t.latestGrouped.version:t.latest[0].version||t.latest[0].version,e.textContent=n})},publishedAt:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.repo;if(this.isGrouped())return this.latestGrouped.published_at;if(t){var r=this.latest.find(function(e){return new RegExp(e.repo,"i").test(t)});return r?r.published_at:null}return this.latest[0].published_at},author:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.repo;if(this.isGrouped())return this.latestGrouped.authors;if(t){var r=this.latest.find(function(e){return new RegExp(e.repo,"i").test(t)});return r?r.author:null}return this.latest[0].author},tag:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.repo;if(localStorage&&localStorage.getItem("versionjs.debug_version"))return localStorage.getItem("versionjs.debug_version");if(this.isGrouped())return this.latestGrouped.version;if(t){var r=this.latest.find(function(e){return new RegExp(e.repo,"i").test(t)});return r?r.version:null}return this.latest[0].version},isGrouped:function(){return!!this.latestGrouped}},t.mixin(i);var a=void 0,u=document.querySelector("script[data-page-id]"),p=document.querySelector("script[data-repo]");if(u){var l=u.getAttribute("data-page-id"),d=u.getAttribute("data-api-key");l&&(a=new i({pageId:l,apiKey:d}))}else if(p){var h=p.getAttribute("data-repo");a=new i({github:{repo:h}})}else a=new i;e&&(e.exports=a),"undefined"!=typeof window&&(window.version=a,document.addEventListener("DOMContentLoaded",function(){a.load()}))})}();
